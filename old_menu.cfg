#####################################################################
#      M73 Prusa
#####################################################################

[display_data _default_16x4 printing_time]
position: 2, 10
text:
    {% set ptime = printer["gcode_macro M73"].r %}
    { "R%02d:%02d" % (ptime // 60, ptime % 60) }
[respond]


[gcode_macro M73]
rename_existing: M773
variable_p: 0.0
variable_r: 0.0
gcode:
    {% set R = params.R|default(0.0)|float %}
    {% set P = params.P|default(0.0)|float %}

    M773 P{P|default(0.0)}
    SET_GCODE_VARIABLE MACRO=M73 VARIABLE=p VALUE={P}
    SET_GCODE_VARIABLE MACRO=M73 VARIABLE=r VALUE={R}
    # M="Reamaning time {R} minutes"

#####################################################################
#      Octoprint
#####################################################################
[menu __main __octoprint]
type: disabled


#####################################################################
#      Make SD card menu working with moonraker/mainsail
#####################################################################
[menu __main __sdcard]
type: list
enable: {'virtual_sdcard' in printer}
name: SD Card

[menu __main __sdcard __start]
type: command
enable: {printer.print_stats.state == "standby"}
name: Start print
gcode:
  M24

[menu __main __resume]
type: command
enable: {printer.print_stats.state == "paused"}
name: Resume print
gcode:
  {menu.exit()}
  RESUME

[menu __main __pause]
type: command
enable: {printer.print_stats.state == "printing"}
name: Pause print
gcode:
  {menu.back()}
  PAUSE

[menu __main __sdcard __file]
type: command
name: File: {printer.print_stats.filename}
index: 0

[menu __main __sdcard __load]
type: vsdlist
enable: {printer.print_stats.state == "standby"}
name: Load file

[menu __main __sdcard __unload]
type: command
enable: {printer.print_stats.state == "standby"}
name: Unload file
gcode:
  SDCARD_RESET_FILE

[menu __main  __cancel]
type: command
enable: {printer.print_stats.state == "paused"}
name: Cancel print
gcode:
  CANCEL_PRINT

[menu __main __emergencystop]
type: command
name: Emergency Stop
gcode:
    M112


[menu __main __poweroff]
type: command
name: Power OFF
gcode:
    SHUTDOWN


#####################################################################
#      Prusa style
#####################################################################
# ### menu main ###
# [menu __mainp]
# type: list
# name: Main

# ### menu tune ###
# [menu __mainp __tune]
# type: list
# enable: {printer.idle_timeout.state == "Printing"}
# name: Tune

# [menu __mainp __tune __speed]
# type: input
# name: Speed: {'%3d' % (menu.input*100)}%
# input: {printer.gcode_move.speed_factor}
# input_min: 0.01
# input_max: 5
# input_step: 0.01
# realtime: True
# gcode:
#     M220 S{'%d' % (menu.input*100)}


# [menu __mainp __tune __flow]
# type: input
# name: Flow: {'%3d' % (menu.input*100)}%
# input: {printer.gcode_move.extrude_factor}
# input_min: 0.01
# input_max: 2
# input_step: 0.01
# realtime: True
# gcode:
#     M221 S{'%d' % (menu.input*100)}

# [menu __mainp __tune __offsetz]
# type: input
# name: Offset Z:{'%05.3f' % menu.input}
# input: {printer.gcode_move.homing_origin.z}
# input_min: -5
# input_max: 5
# input_step: 0.005
# realtime: True
# gcode:
#     SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

# [menu __mainp __tune __fanonoff]
# type: input
# enable: {'fan' in printer}
# name: Fan: {'ON ' if menu.input else 'OFF'}
# input: {printer.fan.speed}
# input_min: 0
# input_max: 1
# input_step: 1
# gcode:
#     M106 S{255 if menu.input else 0}

# [menu __mainp __tune __fanspeed]
# type: input
# enable: {'fan' in printer}
# name: Fan speed: {'%3d' % (menu.input*100)}%
# input: {printer.fan.speed}
# input_min: 0
# input_max: 1
# input_step: 0.01
# gcode:
#     M106 S{'%d' % (menu.input*255)}

# [menu __mainp __tune __changefilament]
# type: input
# name: Change Filament
# gcode:
